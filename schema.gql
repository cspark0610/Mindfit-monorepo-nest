# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Coach {
  bio: String!
  coachAgenda: CoachAgenda!
  coachApplication: CoachApplication!
  coachAppointments: CoachAppointment!
  coachNotes: CoachNote!
  coacheeEvaluations: CoacheeEvaluation!
  coachingAreas: CoachingArea!
  coachingSessions: CoachingSession!
  id: Float!
  isActive: Boolean!
  phoneNumber: String!
  profilePicture: String!
  user: User!
  videoPresentation: String!
}

type CoachAgenda {
  availabilityRange: DateTime!
  coach: Coach!
  coachAgendaDays: [CoachAgendaDay!]!
  coachAppointments: [CoachAppointment!]!
  id: Float!
  outOfService: Boolean!
}

type CoachAgendaDay {
  availableHours: String!
  coachAgenda: CoachAgenda!
  day: DateTime!
  exclude: Boolean!
  id: Float!
}

type CoachApplication {
  approved: Boolean!
  coach: Coach!
  documents: Document!
  email: String!
  id: Float!
  name: String!
  phoneNumber: String!
}

type CoachAppointment {
  accomplished: Boolean!
  coach: Coach!
  coachAgenda: CoachAgenda!
  coachConfirmation: DateTime!
  coachee: Coachee!
  coacheeConfirmation: DateTime!
  coachingSession: CoachingSession!
  date: DateTime!
  id: Float!
  remarks: String!
  title: String!
}

input CoachDto {
  bio: String!
  coachApplicationId: Float
  coachingAreasId: [Float!]
  phoneNumber: String!
  profilePicture: String!
  userId: Float!
  videoPresentation: String!
}

type CoachNote {
  coach: Coach!
  coachee: Coachee!
  id: Float!
  note: String!
}

type Coachee {
  aboutPosition: String!
  bio: String!
  canViewDashboard: Boolean!
  coachAppointments: CoachAppointment!
  coachNotes: CoachNote!
  coacheeEvaluations: CoacheeEvaluation!
  coachingAreas: CoachingArea!
  coachingSessions: CoachingSession!
  id: Float!
  isActive: Boolean!
  isAdmin: Boolean!
  organizations: Organization!
  phoneNumber: String!
  position: String!
  profilePicture: String!
  user: User!
}

input CoacheeDto {
  aboutPosition: String!
  bio: String!
  canViewDashboard: Boolean!
  coachingAreasId: [Float!]!
  isAdmin: Boolean!
  organizationsId: [Float!]!
  phoneNumber: String!
  position: String!
  profilePicture: String!
  userId: Float!
}

type CoacheeEvaluation {
  coach: Coach!
  coachee: Coachee!
  evaluation: String!
  id: Float!
}

type CoachingArea {
  coach: Coach!
  coachee: Coachee!
  coverPicture: String!
  description: String!
  id: Float!
  name: String!
}

type CoachingSession {
  appointmentRelated: CoachAppointment!
  area: String!
  coach: Coach!
  coachEvaluation: String!
  coachFeedback: String!
  coachee: Coachee!
  coacheeFeedback: String!
  id: Float!
  name: String!
  remarks: String!
}

input CreateStaffUserDto {
  email: String!
  isStaff: Boolean!
  isSuperuser: Boolean!
  name: String!
  password: String!
}

input CreateUserDto {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Document {
  coachApplication: CoachApplication!
  file: String!
  id: Float!
  name: String!
  type: String!
}

input EditCoachDto {
  bio: String
  coachApplicationId: Float
  coachingAreasId: [Float!]
  isActive: Boolean
  phoneNumber: String
  profilePicture: String
  videoPresentation: String
}

input EditCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  isAdmin: Boolean
  organizationsId: [Float!]
  phoneNumber: String
  position: String
  profilePicture: String
}

input EditOrganizationDto {
  about: String
  isActive: Boolean
  name: String
  profilePicture: String
}

input EditUserDto {
  email: String
  isActive: Boolean
  isVerified: Boolean
  name: String
  password: String
}

input InviteCoacheeDto {
  aboutPosition: String!
  bio: String!
  canViewDashboard: Boolean!
  coachingAreasId: [Float!]!
  isAdmin: Boolean!
  organizationsId: [Float!]!
  phoneNumber: String!
  position: String!
  profilePicture: String!
  user: CreateUserDto!
}

type Mutation {
  activateCoach(id: Int!): Coach!
  activateOrganization(id: Float!): Organization!
  activateUser(id: Float!): User!
  createCoach(data: CoachDto!): Coach!
  createCoachee(data: CoacheeDto!): Coachee!
  createOrganization(data: OrganizationDto!): Organization!
  createStaffUser(data: CreateStaffUserDto!): User!
  createUser(data: CreateUserDto!): User!
  deactivateCoach(id: Int!): Coach!
  deactivateOrganization(id: Float!): Organization!
  deactivateUser(id: Float!): User!
  deleteCoach(id: Int!): Float!
  deleteCoachee(id: Int!): Float!
  deleteCoachees(ids: Int!): Float!
  deleteCoachs(ids: [Int!]!): Float!
  deleteOrganization(id: Float!): Float!
  deleteOrganizations(ids: [Float!]!): Float!
  deleteUser(id: Float!): Float!
  deleteUsers(ids: [Float!]!): Float!
  editCoach(data: EditCoachDto!, id: Int!): Coach!
  editCoachee(data: EditCoacheeDto!, id: Int!): Coachee!
  editCoachees(data: EditCoacheeDto!, ids: Int!): [Coachee!]!
  editCoachs(data: EditCoachDto!, ids: [Int!]!): [Coach!]!
  editOrganization(data: EditOrganizationDto!, id: Float!): Organization!
  editOrganizations(data: EditOrganizationDto!, ids: [Float!]!): [Organization!]!
  editUser(data: EditUserDto!, id: Float!): User!
  editUsers(data: EditUserDto!, ids: [Float!]!): [User!]!
  inviteCoachee(data: InviteCoacheeDto!): Coachee!
}

type Organization {
  about: String!
  coachees: Coachee!
  id: Float!
  isActive: Boolean!
  name: String!
  owner: User!
  profilePicture: String!
}

input OrganizationDto {
  about: String!
  name: String!
  ownerId: Float!
  profilePicture: String!
}

type Query {
  getCoach(id: Int!): Coach!
  getCoachee(id: Int!): Coachee!
  getCoachees(where: String): [Coachee!]!
  getCoachs(where: String): [Coach!]!
  getOrganization(id: Float!): Organization!
  getOrganizations(where: String): [Organization!]!
  getUser(id: Int!): User!
  getUsers: [User!]!
}

type User {
  coach: Coach!
  coachee: Coachee!
  email: String!
  id: Float!
  isActive: Boolean!
  isStaff: Boolean!
  isSuperUser: Boolean!
  isVerified: Boolean!
  languages: String!
  name: String!
  organization: Organization!
  password: String!
}

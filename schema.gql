# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AgoraTokens {
  rtcToken: String
  rtmToken: String
}

enum AnswerDimensions {
  CF
  CH
  CW
  ME
  PL
  RI
  SH
  TW
}

type Auth {
  refreshToken: String!
  strapiToken: String!
  token: String!
}

input AvailabilityRangeDto {
  friday: [HoursInterval!]
  monday: [HoursInterval!]
  saturday: [HoursInterval!]
  sunday: [HoursInterval!]
  thursday: [HoursInterval!]
  tuesday: [HoursInterval!]
  wednesday: [HoursInterval!]
}

type AvailabilityRangeObjectType {
  friday: [HoursIntervalObjectType!]
  monday: [HoursIntervalObjectType!]
  saturday: [HoursIntervalObjectType!]
  sunday: [HoursIntervalObjectType!]
  thursday: [HoursIntervalObjectType!]
  tuesday: [HoursIntervalObjectType!]
  wednesday: [HoursIntervalObjectType!]
}

input ChangePasswordDto {
  actualPassword: String!
  confirmPassword: String!
  password: String!
}

type Coach {
  assignedCoachees: [Coachee!]
  bio: String!
  coachAgenda: CoachAgenda
  coachApplication: CoachApplication
  coachNotes: [CoachNote!]
  coacheeEvaluations: [CoacheeEvaluation!]
  coachingAreas: [CoachingArea!]
  coachingSessions: [CoachingSession!]
  id: Float!
  isActive: Boolean!
  phoneNumber: String!
  profilePicture: String!
  user: User!
  videoPresentation: String!
}

type CoachAgenda {
  availabilityRange: AvailabilityRangeObjectType
  coach: Coach!
  coachAgendaDays: [CoachAgendaDay!]
  coachAppointments: [CoachAppointment!]
  id: Float!
  outOfService: Boolean!
}

type CoachAgendaDay {
  availableHours: [HoursIntervalObjectType!]
  coachAgenda: CoachAgenda!
  day: DateTime!
  exclude: Boolean!
  id: Float!
}

type CoachApplication {
  approved: Boolean!
  coach: Coach!
  documents: Document!
  email: String!
  id: Float!
  name: String!
  phoneNumber: String!
}

type CoachAppointment {
  accomplished: Boolean!
  coachAgenda: CoachAgenda!
  coachConfirmation: DateTime!
  coachee: Coachee!
  coacheeConfirmation: DateTime!
  coachingSession: CoachingSession
  endDate: DateTime!
  id: Float!
  remarks: String!
  startDate: DateTime!
}

input CoachDto {
  bio: String!
  coachApplicationId: Float
  coachingAreasId: [Float!]
  phoneNumber: String!
  profilePicture: String!
  userId: Float!
  videoPresentation: String!
}

type CoachNote {
  coach: Coach!
  coachee: Coachee!
  id: Float!
  note: String!
}

type Coachee {
  aboutPosition: String
  assignedCoach: Coach
  bio: String
  canViewDashboard: Boolean!
  coachAppointments: [CoachAppointment!]
  coachNotes: [CoachNote!]
  coacheeEvaluations: [CoacheeEvaluation!]
  coachingAreas: [CoachingArea!]
  coachingSessions: [CoachingSession!]
  id: Float!
  invitationAccepted: Boolean
  invited: Boolean!
  isActive: Boolean!
  isAdmin: Boolean!
  organization: Organization
  phoneNumber: String
  position: String!
  profilePicture: String
  user: User!
}

type CoacheeAgenda {
  appointments: [CoachAppointment!]
  satsRealized: [SatReport!]
}

input CoacheeDto {
  aboutPosition: String!
  bio: String!
  canViewDashboard: Boolean!
  coachingAreasId: [Float!]!
  invitationAccepted: Boolean!
  invited: Boolean!
  isAdmin: Boolean!
  organizationId: Float!
  phoneNumber: String!
  position: String!
  profilePicture: String!
  userId: Float!
}

type CoacheeEvaluation {
  coach: Coach!
  coachee: Coachee!
  evaluation: String!
  id: Float!
}

type CoachingArea {
  coachees: [Coachee!]
  coaches: [Coach!]
  coverPicture: String!
  description: String!
  id: Float!
  name: String!
}

input CoachingAreaDto {
  coverPicture: String!
  description: String!
  name: String!
}

type CoachingSession {
  appointmentRelated: CoachAppointment!
  coach: Coach!
  coachEvaluation: String
  coachFeedback: String
  coachee: Coachee!
  coacheeFeedback: String
  id: Float!
  isCoachInSession: Boolean!
  isCoacheeInSession: Boolean!
  remarks: String
}

type CoachingSessionAccess {
  chatSessionChannel: String!
  tokens: AgoraTokens!
  videoSessionChannel: String!
}

enum ConfigCodeNames {
  DEFAULT_SAT
  MAX_APPOINTMENTS_PER_MONTH
  MAX_COACHING_SESSION_DURATION
  MAX_DISTANTE_COACH_APPOINTMENT
  MAX_DISTANTE_COACH_AVAILABITY_QUERY
  MIN_COACHING_SESSION_DURATION
}

type CoreConfig {
  codename: ConfigCodeNames!
  id: Float!
  jsonValue: String
  name: String!
  value: String
}

input CoreConfigDto {
  codename: ConfigCodeNames!
  jsonValue: String
  name: String!
  value: String!
}

input CreateCoachAgendaDayDto {
  availableHours: [HoursInterval!]
  day: DateTime!
  exclude: Boolean!
}

input CreateCoachAgendaDto {
  availabilityRange: AvailabilityRangeDto
  coachId: Float!
  outOfService: Boolean
}

input CreateCoachAppointmentDto {
  coachAgendaId: Float!
  coacheeId: Float!
  endDate: DateTime!
  remarks: String!
  startDate: DateTime!
  title: String!
}

input CreateOrganizationDto {
  about: String
  name: String
  profilePicture: String
}

input CreateStaffUserDto {
  email: String!
  isStaff: Boolean!
  isSuperuser: Boolean!
  name: String!
  password: String!
  role: Roles!
}

input CreateUserDto {
  email: String!
  name: String!
  password: String!
  role: Roles!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DayAvailabilityObjectType {
  availability: [HoursIntervalObjectType!]!
  date: DateTime!
}

enum DiagnosticsEnum {
  BELOW_AVEGARE_COMMUNICATION
  HIGH_CORRECTIVE_LEADERSHIP
  HIGH_TRANSACTIONAL_LEADERSHIP
  HIGH_TRANSFORMATIONAL_LEADERSHIP
  IN_AVERAGE_OF_SOME_COMMUNICATION_SKILL
  LOW_AVERAGE_OF_SOME_COMMUNICATION_SKILL
  LOW_SKILL_COMMUNICATION
  OUTSTANGIND_COMMUNICATION
  SOME_CORRECTIVE_LEADERSHIP
  SOME_TRANSACTIONAL_LEADERSHIP
  SOME_TRANSFORMATIONAL_LEADERSHIP
}

type Document {
  coachApplication: CoachApplication!
  file: String!
  id: Float!
  name: String!
  type: String!
}

input EditCoachAgendaDayDto {
  availableHours: [HoursInterval!]
  day: DateTime
  exclude: Boolean
}

input EditCoachAgendaDto {
  availabilityRange: AvailabilityRangeDto
  outOfService: Boolean
}

input EditCoachAppointmentDto {
  coachAgendaId: Float
  coacheeId: Float
  endDate: DateTime
  remarks: String
  startDate: DateTime
  title: String
}

input EditCoachDto {
  bio: String
  coachApplicationId: Float
  coachingAreasId: [Float!]
  isActive: Boolean
  phoneNumber: String
  profilePicture: String
  videoPresentation: String
}

input EditCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  invitationAccepted: Boolean
  invited: Boolean
  isAdmin: Boolean
  organizationId: Float
  phoneNumber: String
  position: String
  profilePicture: String
}

input EditCoreConfigDto {
  codename: ConfigCodeNames
  jsonValue: String
  name: String
  value: String
}

input EditOrganizationDto {
  about: String
  isActive: Boolean
  name: String
  profilePicture: String
}

input EditSatBasicAnswerDto {
  answerDimension: AnswerDimensions
  order: Float
  title: String
  value: Float
}

input EditSatBasicQuestionDto {
  dimension: QuestionDimentions
  order: Float
  satBasicAnswers: [NestedSatBasicAnswerDto!]
  title: String
  type: QuestionsEnum
}

input EditSatBasicSectionDto {
  codename: SectionCodenames
  order: Float
  questions: [NestedSatBasicQuestionDto!]
  title: String
}

input EditUserDto {
  email: String
  hashResetPassword: String
  hashedRefreshToken: String
  isActive: Boolean
  isVerified: Boolean
  name: String
  password: String
  role: Roles
  verificationCode: String
}

type FavoritePost {
  id: Float!
  strapiPostId: Float!
  user: User!
}

input FavoritePostDto {
  strapiPostId: Float!
}

input HoursInterval {
  from: String!
  to: String!
}

type HoursIntervalObjectType {
  from: String
  to: String
}

input InviteCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  isAdmin: Boolean
  phoneNumber: String
  position: String
  profilePicture: String
  user: InviteUserDto!
}

input InviteUserDto {
  email: String!
  name: String!
  role: Roles!
}

type Mutation {
  CoachConfirmAppointment(id: Int!): CoachAppointment!
  acceptInvitation: Coachee!
  activateUser(id: Float!): User!
  assignCoach(coachId: Int!, coacheeId: Int!): Coachee!
  changePassword(data: ChangePasswordDto!): Boolean!
  createCoach(data: CoachDto!): Coach!
  createCoachAgenda(data: CreateCoachAgendaDto!): CoachAgenda!
  createCoachAgendaDay(data: CreateCoachAgendaDayDto!): CoachAgendaDay!
  createCoachAppointment(data: CreateCoachAppointmentDto!): CoachAppointment!
  createCoachee(data: CoacheeDto!): Coachee!
  createCoachingArea(data: CoachingAreaDto!): CoachingArea!
  createCoreConfig(data: CoreConfigDto!): CoreConfig!
  createFavoritePost(data: FavoritePostDto!): FavoritePost!
  createManyCoach(data: [CoachDto!]!): [Coach!]!
  createManyCoachAgenda(data: [CreateCoachAgendaDto!]!): [CoachAgenda!]!
  createManyCoachAgendaDay(data: [CreateCoachAgendaDayDto!]!): [CoachAgendaDay!]!
  createManyCoachAppointment(data: [CreateCoachAppointmentDto!]!): [CoachAppointment!]!
  createManyCoachee(data: [CoacheeDto!]!): [Coachee!]!
  createManyCoachingArea(data: [CoachingAreaDto!]!): [CoachingArea!]!
  createManyCoreConfig(data: [CoreConfigDto!]!): [CoreConfig!]!
  createManyFavoritePost(data: [FavoritePostDto!]!): [FavoritePost!]!
  createManyOrganization(data: [CreateOrganizationDto!]!): [Organization!]!
  createManyPostProgress(data: [PostProgressDto!]!): [PostProgress!]!
  createManySatBasic(data: [SatBasicDto!]!): [SatBasic!]!
  createManySatBasicAnswer(data: [SatBasicAnswerDto!]!): [SatBasicAnswer!]!
  createManySatBasicQuestion(data: [SatBasicQuestionDto!]!): [SatBasicQuestion!]!
  createManySatBasicSection(data: [SatBasicSectionDto!]!): [SatBasicSection!]!
  createManySatReport(data: [SatReportDto!]!): [SatReport!]!
  createManyUser(data: [CreateUserDto!]!): [User!]!
  createOrganization(data: CreateOrganizationDto!): Organization!
  createPassword(data: ResetPasswordDto!): Auth!
  createPostProgress(data: PostProgressDto!): PostProgress!
  createSatBasic(data: SatBasicDto!): SatBasic!
  createSatBasicAnswer(data: SatBasicAnswerDto!): SatBasicAnswer!
  createSatBasicQuestion(data: SatBasicQuestionDto!): SatBasicQuestion!
  createSatBasicSection(data: SatBasicSectionDto!): SatBasicSection!
  createSatReport(data: SatReportDto!): SatReport!
  createStaffUser(data: CreateStaffUserDto!): User!
  createUser(data: CreateUserDto!): User!
  deactivateUser(id: Float!): User!
  deleteCoach(id: Float!): Float!
  deleteCoachAgenda(id: Float!): Float!
  deleteCoachAgendaDay(id: Float!): Float!
  deleteCoachAppointment(id: Float!): Float!
  deleteCoachee(id: Float!): Float!
  deleteCoachingArea(id: Float!): Float!
  deleteCoreConfig(id: Float!): Float!
  deleteFavoritePost(id: Float!): Float!
  deleteManyCoachAgendaDays(ids: [Float!]!): Float!
  deleteManyCoachAgendas(ids: [Float!]!): Float!
  deleteManyCoachAppointments(ids: [Float!]!): Float!
  deleteManyCoachees(ids: [Float!]!): Float!
  deleteManyCoachingAreas(ids: [Float!]!): Float!
  deleteManyCoachs(ids: [Float!]!): Float!
  deleteManyCoreConfigs(ids: [Float!]!): Float!
  deleteManyFavoritePosts(ids: [Float!]!): Float!
  deleteManyOrganizations(ids: [Float!]!): Float!
  deleteManyPostProgresss(ids: [Float!]!): Float!
  deleteManySatBasicAnswers(ids: [Float!]!): Float!
  deleteManySatBasicQuestions(ids: [Float!]!): Float!
  deleteManySatBasicSections(ids: [Float!]!): Float!
  deleteManySatBasics(ids: [Float!]!): Float!
  deleteManySatReports(ids: [Float!]!): Float!
  deleteManyUsers(ids: [Float!]!): Float!
  deleteOrganization(id: Float!): Float!
  deletePostProgress(id: Float!): Float!
  deleteSatBasic(id: Float!): Float!
  deleteSatBasicAnswer(id: Float!): Float!
  deleteSatBasicQuestion(id: Float!): Float!
  deleteSatBasicSection(id: Float!): Float!
  deleteSatReport(id: Float!): Float!
  deleteUser(id: Float!): Float!
  inviteCoachee(data: InviteCoacheeDto!): Coachee!
  logout: Boolean!
  refreshToken: Auth!
  requestAppointment(data: RequestCoachAppointmentDto!): CoachAppointment!
  requestResetPassword(email: String!): Boolean!
  resetPassword(data: ResetPasswordDto!): User!
  signIn(data: SignInDto!): Auth!
  signInWithGoogle(data: RRSSDto!): Auth!
  signUp(data: CreateUserDto!): Auth!
  signUpWithGoogle(data: RRSSSignUpDto!): Auth!
  updateCoach(data: EditCoachDto!, id: Float!): Coach!
  updateCoachAgenda(data: EditCoachAgendaDto!): CoachAgenda!
  updateCoachAgendaDay(data: EditCoachAgendaDayDto!, id: Float!): CoachAgendaDay!
  updateCoachAppointment(data: EditCoachAppointmentDto!, id: Float!): CoachAppointment!
  updateCoachee(data: EditCoacheeDto!, id: Float!): Coachee!
  updateCoachingArea(data: CoachingAreaDto!, id: Float!): CoachingArea!
  updateCoreConfig(data: EditCoreConfigDto!, id: Float!): CoreConfig!
  updateFavoritePost(data: UpdateFavoritePostDto!, id: Float!): FavoritePost!
  updateManyCoachAgendaDays(data: EditCoachAgendaDayDto!, ids: [Float!]!): [CoachAgendaDay!]!
  updateManyCoachAgendas(data: EditCoachAgendaDto!, ids: [Float!]!): [CoachAgenda!]!
  updateManyCoachAppointments(data: EditCoachAppointmentDto!, ids: [Float!]!): [CoachAppointment!]!
  updateManyCoachees(data: EditCoacheeDto!, ids: [Float!]!): [Coachee!]!
  updateManyCoachingAreas(data: CoachingAreaDto!, ids: [Float!]!): [CoachingArea!]!
  updateManyCoachs(data: EditCoachDto!, ids: [Float!]!): [Coach!]!
  updateManyCoreConfigs(data: EditCoreConfigDto!, ids: [Float!]!): [CoreConfig!]!
  updateManyFavoritePosts(data: UpdateFavoritePostDto!, ids: [Float!]!): [FavoritePost!]!
  updateManyOrganizations(data: EditOrganizationDto!, ids: [Float!]!): [Organization!]!
  updateManyPostProgresss(data: UpdatePostProgressDto!, ids: [Float!]!): [PostProgress!]!
  updateManySatBasicAnswers(data: EditSatBasicAnswerDto!, ids: [Float!]!): [SatBasicAnswer!]!
  updateManySatBasicQuestions(data: EditSatBasicQuestionDto!, ids: [Float!]!): [SatBasicQuestion!]!
  updateManySatBasicSections(data: EditSatBasicSectionDto!, ids: [Float!]!): [SatBasicSection!]!
  updateManySatBasics(data: SatBasicDto!, ids: [Float!]!): [SatBasic!]!
  updateManySatReports(data: SatReportDto!, ids: [Float!]!): [SatReport!]!
  updateManyUsers(data: EditUserDto!, ids: [Float!]!): [User!]!
  updateOrganization(data: EditOrganizationDto!, id: Float!): Organization!
  updatePostProgress(data: UpdatePostProgressDto!, id: Float!): PostProgress!
  updateSatBasic(data: SatBasicDto!, id: Float!): SatBasic!
  updateSatBasicAnswer(data: EditSatBasicAnswerDto!, id: Float!): SatBasicAnswer!
  updateSatBasicQuestion(data: EditSatBasicQuestionDto!, id: Float!): SatBasicQuestion!
  updateSatBasicSection(data: EditSatBasicSectionDto!, id: Float!): SatBasicSection!
  updateSatReport(data: SatReportDto!, id: Float!): SatReport!
  updateUser(data: EditUserDto!, id: Float!): User!
  verifyAccount(data: VerifyAccountDto!): Boolean!
}

input NestedSatBasicAnswerDto {
  answerDimension: AnswerDimensions
  order: Float!
  title: String!
  value: Float!
}

input NestedSatBasicQuestionDto {
  dimension: QuestionDimentions
  order: Float!
  satBasicAnswers: [NestedSatBasicAnswerDto!]!
  title: String!
  type: QuestionsEnum!
}

input NestedSatBasicSectionDto {
  codename: SectionCodenames
  order: Float!
  questions: [NestedSatBasicQuestionDto!]!
  title: String!
}

type Organization {
  about: String!
  coachees: [Coachee!]
  id: Float!
  isActive: Boolean!
  name: String!
  owner: User!
  profilePicture: String!
}

type PostProgress {
  id: Float!
  progress: Float!
  strapiPostId: Float!
  user: User!
}

input PostProgressDto {
  progress: Float!
  strapiPostId: Float!
}

type Query {
  findAllCoachAgendaDays: [CoachAgendaDay!]!
  findAllCoachAgendas: [CoachAgenda!]!
  findAllCoachAppointments: [CoachAppointment!]!
  findAllCoachees: [Coachee!]!
  findAllCoachingAreas: [CoachingArea!]!
  findAllCoachs: [Coach!]!
  findAllCoreConfigs: [CoreConfig!]!
  findAllFavoritePosts: [FavoritePost!]!
  findAllOrganizations: [Organization!]!
  findAllPostProgresss: [PostProgress!]!
  findAllSatBasicAnswers: [SatBasicAnswer!]!
  findAllSatBasicQuestions: [SatBasicQuestion!]!
  findAllSatBasicSections: [SatBasicSection!]!
  findAllSatBasics: [SatBasic!]!
  findAllSatReports: [SatReport!]!
  findAllUsers: [User!]!
  findCoachAgendaById(id: Int!): CoachAgenda!
  findCoachAgendaDayById(id: Int!): CoachAgendaDay!
  findCoachAppointmentById(id: Int!): CoachAppointment!
  findCoachById(id: Int!): Coach!
  findCoacheeById(id: Int!): Coachee!
  findCoachingAreaById(id: Int!): CoachingArea!
  findCoreConfigById(id: Int!): CoreConfig!
  findFavoritePostById(id: Int!): FavoritePost!
  findOrganizationById(id: Int!): Organization!
  findPostProgressById(id: Int!): PostProgress!
  findSatBasicAnswerById(id: Int!): SatBasicAnswer!
  findSatBasicById(id: Int!): SatBasic!
  findSatBasicQuestionById(id: Int!): SatBasicQuestion!
  findSatBasicSectionById(id: Int!): SatBasicSection!
  findSatReportById(id: Int!): SatReport!
  findUserById(id: Int!): User!
  getCoachAvailability(coachAgendaId: Float!, from: DateTime!, to: DateTime!): [DayAvailabilityObjectType!]!
  getCoachSessionTokens(sessionId: Float!): CoachingSessionAccess!
  getCoacheeAgenda(from: DateTime!, to: DateTime!): CoacheeAgenda!
  getCoacheeSessionTokens(sessionId: Float!): CoachingSessionAccess!
  getDefaultSat: CoreConfig!
  getPositiveAnswers: [SatBasicAnswer!]!
}

enum QuestionDimentions {
  ANGER
  ANXIETY
  COORDINATOR
  CORRECTIVE_AVOIDANT_LEADERSHIP
  CREATIVE
  DIET
  DOWNWARD_COMMUNICATION
  EVALUATOR
  EXPERIENCE_OF_LIFE
  FINISHER
  GENERAL
  HORIZONTAL_COMMUNICATION
  IMPLANTER
  JOY
  MENTAL_RELAXATION
  PERCEPTION_OF_LIFE
  PERSONAL_AND_PROFESIONAL_BALANCE
  PHYSICAL_ACTIVITY
  RESOURCE_INVESTIGATOR
  REST_AND_SLEEP
  SADNESS
  TEAM_WORKER
  TRANSACTIONAL_LEADERSHIP
  TRANSFORMATIONAL_LEADERSHIP
  UPWARD_COMMUNICATION
}

enum QuestionsEnum {
  BOOLEAN
  FREE_TEXT
  MULTISELECT
  NUMBER
  SELECT
}

input RRSSDto {
  mobile: String
  token: String!
}

input RRSSSignUpDto {
  mobile: String
  role: Roles!
  token: String!
}

input RequestCoachAppointmentDto {
  endDate: DateTime!
  remarks: String
  startDate: DateTime!
}

input ResetPasswordDto {
  confirmPassword: String!
  hash: String!
  password: String!
}

enum Roles {
  COACH
  COACHEE
  STAFF
  SUPER_USER
}

type SatBasic {
  description: String!
  id: Float!
  sections: [SatBasicSection!]
  testsReports: [SatReport!]
  title: String!
}

type SatBasicAnswer {
  answerDimension: String
  id: Float!
  order: String!
  question: SatBasicQuestion!
  reportQuestions: SatReportQuestion!
  title: String!
  value: Float!
}

input SatBasicAnswerDto {
  answerDimension: AnswerDimensions
  order: Float!
  satBasicQuestionId: Float!
  title: String!
  value: Float!
}

input SatBasicDto {
  description: String!
  satBasicSections: [NestedSatBasicSectionDto!]!
  title: String!
}

type SatBasicQuestion {
  answers: [SatBasicAnswer!]!
  dimension: String
  id: Float!
  order: String!
  reportQuestions: SatReportQuestion
  section: SatBasicSection!
  title: String!
  type: String!
}

input SatBasicQuestionDto {
  dimension: QuestionDimentions
  order: Float!
  satBasicAnswers: [NestedSatBasicAnswerDto!]!
  satBasicSectionId: Float!
  title: String!
  type: QuestionsEnum!
}

type SatBasicSection {
  codename: String!
  id: Float!
  order: String!
  questions: [SatBasicQuestion!]!
  satTest: SatBasic!
  sectionResults: [SatSectionResult!]!
  title: String!
}

input SatBasicSectionDto {
  codename: SectionCodenames
  order: Float!
  questions: [NestedSatBasicQuestionDto!]!
  satBasicId: Float!
  title: String!
}

type SatReport {
  createdAt: DateTime!
  id: Float!
  result: [SatResultAreaObjectType!]
  satRealized: SatBasic!
  sectionsResults: [SatSectionResult!]!
  updatedAt: DateTime!
  user: User!
}

input SatReportDto {
  satRealizedId: Float!
  sectionsResult: [SatSectionResultDto!]!
}

type SatReportQuestion {
  answersSelected: [SatBasicAnswer!]!
  id: Float!
  question: SatBasicQuestion!
  section: SatSectionResult!
}

input SatReportQuestionDto {
  answersSelected: [Float!]!
  question: Float!
}

type SatResultAreaObjectType {
  area: String!
  areaCodeName: String!
  diagnostics: [DiagnosticsEnum!]
  puntuations: [SatResultPuntuationObjectType!]
}

type SatResultPuntuationObjectType {
  base: Float
  name: String!
  value: Float!
}

type SatSectionResult {
  id: Float!
  questions: [SatReportQuestion!]!
  satReport: SatReport!
  section: SatBasicSection!
}

input SatSectionResultDto {
  questions: [SatReportQuestionDto!]!
  section: Float!
}

enum SectionCodenames {
  EMOTIONAL_STATE
  GENERAL
  GETTING_INTO_ACTION
  HAPPINESS
  HEALT
  LEADERSHIP
  LIFE_PURPOSE
  SUBORDINATE
  TEAMWORK
}

input SignInDto {
  email: String!
  password: String!
}

input UpdateFavoritePostDto {
  strapiPostId: Float!
}

input UpdatePostProgressDto {
  progress: Float
  strapiPostId: Float
}

type User {
  coach: Coach
  coachee: Coachee
  email: String!
  favoritesPosts: [FavoritePost!]
  hashResetPassword: String!
  hashedRefreshToken: String!
  id: Float!
  isActive: Boolean!
  isStaff: Boolean!
  isSuperUser: Boolean!
  isVerified: Boolean!
  languages: String!
  name: String!
  organization: Organization
  password: String!
  postsProgress: [PostProgress!]
  role: Roles!
  testResults: [SatReport!]
  verificationCode: String!
}

input VerifyAccountDto {
  code: String!
  email: String!
}

# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum AnswerDimensions {
  CF
  CH
  CW
  ME
  PL
  RI
  SH
  TW
}

type Auth {
  refreshToken: String!
  token: String!
}

input ChangePasswordDto {
  confirmPassword: String!
  password: String!
}

type Coach {
  bio: String!
  coachAgenda: CoachAgenda!
  coachApplication: CoachApplication!
  coachAppointments: CoachAppointment!
  coachNotes: CoachNote!
  coacheeEvaluations: CoacheeEvaluation!
  coachingAreas: CoachingArea!
  coachingSessions: CoachingSession!
  id: Float!
  isActive: Boolean!
  phoneNumber: String!
  profilePicture: String!
  user: User!
  videoPresentation: String!
}

type CoachAgenda {
  availabilityRange: DateTime!
  coach: Coach!
  coachAgendaDays: [CoachAgendaDay!]!
  coachAppointments: [CoachAppointment!]!
  id: Float!
  outOfService: Boolean!
}

type CoachAgendaDay {
  availableHours: String!
  coachAgenda: CoachAgenda!
  day: DateTime!
  exclude: Boolean!
  id: Float!
}

type CoachApplication {
  approved: Boolean!
  coach: Coach!
  documents: Document!
  email: String!
  id: Float!
  name: String!
  phoneNumber: String!
}

type CoachAppointment {
  accomplished: Boolean!
  coach: Coach!
  coachAgenda: CoachAgenda!
  coachConfirmation: DateTime!
  coachee: Coachee!
  coacheeConfirmation: DateTime!
  coachingSession: CoachingSession!
  date: DateTime!
  id: Float!
  remarks: String!
  title: String!
}

input CoachDto {
  bio: String!
  coachApplicationId: Float
  coachingAreasId: [Float!]
  phoneNumber: String!
  profilePicture: String!
  userId: Float!
  videoPresentation: String!
}

type CoachNote {
  coach: Coach!
  coachee: Coachee!
  id: Float!
  note: String!
}

type Coachee {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean!
  coachAppointments: [CoachAppointment!]
  coachNotes: [CoachNote!]
  coacheeEvaluations: [CoacheeEvaluation!]
  coachingAreas: [CoachingArea!]
  coachingSessions: [CoachingSession!]
  id: Float!
  invitationAccepted: Boolean
  invited: Boolean!
  isActive: Boolean!
  isAdmin: Boolean!
  organization: Organization
  phoneNumber: String
  position: String!
  profilePicture: String
  user: User!
}

input CoacheeDto {
  aboutPosition: String!
  bio: String!
  canViewDashboard: Boolean!
  coachingAreasId: [Float!]!
  invitationAccepted: Boolean!
  invited: Boolean!
  isAdmin: Boolean!
  organizationId: Float!
  phoneNumber: String!
  position: String!
  profilePicture: String!
  userId: Float!
}

type CoacheeEvaluation {
  coach: Coach!
  coachee: Coachee!
  evaluation: String!
  id: Float!
}

type CoachingArea {
  coach: Coach!
  coachee: Coachee!
  coverPicture: String!
  description: String!
  id: Float!
  name: String!
}

type CoachingSession {
  appointmentRelated: CoachAppointment!
  area: String!
  coach: Coach!
  coachEvaluation: String!
  coachFeedback: String!
  coachee: Coachee!
  coacheeFeedback: String!
  id: Float!
  name: String!
  remarks: String!
}

enum ConfigCodeNames {
  DEFAULT_SAT
}

type CoreConfig {
  codename: ConfigCodeNames!
  id: Float!
  jsonValue: String
  name: String!
  value: String
}

input CoreConfigDto {
  codename: ConfigCodeNames!
  jsonValue: String
  name: String!
  value: String!
}

input CreateOrganizationDto {
  about: String
  name: String
  ownerId: Float
  profilePicture: String
}

input CreateStaffUserDto {
  email: String!
  isStaff: Boolean!
  isSuperuser: Boolean!
  name: String!
  password: String!
}

input CreateUserDto {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Document {
  coachApplication: CoachApplication!
  file: String!
  id: Float!
  name: String!
  type: String!
}

input EditCoachDto {
  bio: String
  coachApplicationId: Float
  coachingAreasId: [Float!]
  isActive: Boolean
  phoneNumber: String
  profilePicture: String
  videoPresentation: String
}

input EditCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  invitationAccepted: Boolean
  invited: Boolean
  isAdmin: Boolean
  organizationId: Float
  phoneNumber: String
  position: String
  profilePicture: String
}

input EditCoreConfigDto {
  codename: ConfigCodeNames
  jsonValue: String
  name: String
  value: String
}

input EditOrganizationDto {
  about: String
  isActive: Boolean
  name: String
  profilePicture: String
}

input EditSatBasicAnswerDto {
  dimension: AnswerDimensions
  order: Float
  title: String
  value: Float
}

input EditSatBasicQuestionDto {
  dimension: QuestionDimentions
  order: Float
  satBasicAnswers: [NestedSatBasicAnswerDto!]
  title: String
  type: QuestionsEnum
}

input EditSatBasicSectionDto {
  codename: SectionCodenames
  order: Float
  questions: [NestedSatBasicQuestionDto!]
  title: String
}

input EditUserDto {
  email: String
  hashResetPassword: String
  hashedRefreshToken: String
  isActive: Boolean
  isVerified: Boolean
  name: String
  password: String
  verificationCode: String
}

input InviteCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  isAdmin: Boolean
  phoneNumber: String
  position: String
  profilePicture: String
  user: InviteUserDto!
}

input InviteUserDto {
  email: String!
  name: String!
}

type Mutation {
  acceptInvitation(id: Int!): Coachee!
  activateUser(id: Float!): User!
  changePassword(data: ChangePasswordDto!): Boolean!
  createCoach(data: CoachDto!): Coach!
  createCoachee(data: CoacheeDto!): Coachee!
  createCoreConfig(data: CoreConfigDto!): CoreConfig!
  createOrganization(data: CreateOrganizationDto!): Organization!
  createSatBasic(data: SatBasicDto!): SatBasic!
  createSatBasicAnswer(data: SatBasicAnswerDto!): SatBasicAnswer!
  createSatBasicQuestion(data: SatBasicQuestionDto!): SatBasicQuestion!
  createSatBasicSection(data: SatBasicSectionDto!): SatBasicSection!
  createSatReport(data: SatReportDto!): SatReport!
  createStaffUser(data: CreateStaffUserDto!): User!
  createUser(data: CreateUserDto!): User!
  deactivateUser(id: Float!): User!
  deleteCoach(id: Float!): Float!
  deleteCoachee(id: Float!): Float!
  deleteCoreConfig(id: Float!): Float!
  deleteManyCoachees(ids: [Float!]!): Float!
  deleteManyCoachs(ids: [Float!]!): Float!
  deleteManyCoreConfigs(ids: [Float!]!): Float!
  deleteManyOrganizations(ids: [Float!]!): Float!
  deleteManySatBasicAnswers(ids: [Float!]!): Float!
  deleteManySatBasicQuestions(ids: [Float!]!): Float!
  deleteManySatBasicSections(ids: [Float!]!): Float!
  deleteManySatBasics(ids: [Float!]!): Float!
  deleteManySatReports(ids: [Float!]!): Float!
  deleteManyUsers(ids: [Float!]!): Float!
  deleteOrganization(id: Float!): Float!
  deleteSatBasic(id: Float!): Float!
  deleteSatBasicAnswer(id: Float!): Float!
  deleteSatBasicQuestion(id: Float!): Float!
  deleteSatBasicSection(id: Float!): Float!
  deleteSatReport(id: Float!): Float!
  deleteUser(id: Float!): Float!
  inviteCoachee(data: InviteCoacheeDto!): Coachee!
  logout: Boolean!
  refreshToken: Auth!
  requestResetPassword(email: String!): Boolean!
  resetPassword(data: ResetPasswordDto!): User!
  signIn(data: SignInDto!): Auth!
  signInWithGoogle(data: RRSSDto!): Auth!
  signUp(data: CreateUserDto!): Auth!
  signUpWithGoogle(data: RRSSDto!): Auth!
  updateCoach(data: EditCoachDto!, id: Float!): Coach!
  updateCoachee(data: EditCoacheeDto!, id: Float!): Coachee!
  updateCoreConfig(data: EditCoreConfigDto!, id: Float!): CoreConfig!
  updateManyCoachees(data: EditCoacheeDto!, ids: [Float!]!): [Coachee!]!
  updateManyCoachs(data: EditCoachDto!, ids: [Float!]!): [Coach!]!
  updateManyCoreConfigs(data: EditCoreConfigDto!, ids: [Float!]!): [CoreConfig!]!
  updateManyOrganizations(data: EditOrganizationDto!, ids: [Float!]!): [Organization!]!
  updateManySatBasicAnswers(data: EditSatBasicAnswerDto!, ids: [Float!]!): [SatBasicAnswer!]!
  updateManySatBasicQuestions(data: EditSatBasicQuestionDto!, ids: [Float!]!): [SatBasicQuestion!]!
  updateManySatBasicSections(data: EditSatBasicSectionDto!, ids: [Float!]!): [SatBasicSection!]!
  updateManySatBasics(data: SatBasicDto!, ids: [Float!]!): [SatBasic!]!
  updateManySatReports(data: SatReportDto!, ids: [Float!]!): [SatReport!]!
  updateManyUsers(data: EditUserDto!, ids: [Float!]!): [User!]!
  updateOrganization(data: EditOrganizationDto!, id: Float!): Organization!
  updateSatBasic(data: SatBasicDto!, id: Float!): SatBasic!
  updateSatBasicAnswer(data: EditSatBasicAnswerDto!, id: Float!): SatBasicAnswer!
  updateSatBasicQuestion(data: EditSatBasicQuestionDto!, id: Float!): SatBasicQuestion!
  updateSatBasicSection(data: EditSatBasicSectionDto!, id: Float!): SatBasicSection!
  updateSatReport(data: SatReportDto!, id: Float!): SatReport!
  updateUser(data: EditUserDto!, id: Float!): User!
  verifyAccount(data: VerifyAccountDto!): Boolean!
}

input NestedSatBasicAnswerDto {
  dimension: AnswerDimensions
  order: Float!
  title: String!
  value: Float!
}

input NestedSatBasicQuestionDto {
  dimension: QuestionDimentions
  order: Float!
  satBasicAnswers: [NestedSatBasicAnswerDto!]!
  title: String!
  type: QuestionsEnum!
}

input NestedSatBasicSectionDto {
  codename: SectionCodenames
  order: Float!
  questions: [NestedSatBasicQuestionDto!]!
  title: String!
}

type Organization {
  about: String!
  coachees: [Coachee!]
  id: Float!
  isActive: Boolean!
  name: String!
  owner: User!
  profilePicture: String!
}

type Query {
  findAllCoachees: [Coachee!]!
  findAllCoachs: [Coach!]!
  findAllCoreConfigs: [CoreConfig!]!
  findAllOrganizations: [Organization!]!
  findAllSatBasicAnswers: [SatBasicAnswer!]!
  findAllSatBasicQuestions: [SatBasicQuestion!]!
  findAllSatBasicSections: [SatBasicSection!]!
  findAllSatBasics: [SatBasic!]!
  findAllSatReports: [SatReport!]!
  findAllUsers: [User!]!
  findCoachById(id: Int!): Coach!
  findCoacheeById(id: Int!): Coachee!
  findCoreConfigById(id: Int!): CoreConfig!
  findOrganizationById(id: Int!): Organization!
  findSatBasicAnswerById(id: Int!): SatBasicAnswer!
  findSatBasicById(id: Int!): SatBasic!
  findSatBasicQuestionById(id: Int!): SatBasicQuestion!
  findSatBasicSectionById(id: Int!): SatBasicSection!
  findSatReportById(id: Int!): SatReport!
  findUserById(id: Int!): User!
  getDefaultSat: CoreConfig!
  getPositiveAnswers: [SatBasicAnswer!]!
}

enum QuestionDimentions {
  ANGER
  ANXIETY
  COORDINATOR
  CORRECTIVE_AVOIDANT_LEADERSHIP
  CREATIVE
  DOWNWARD_COMMUNICATION
  EVALUATOR
  EXPERIENCE_OF_LIFE
  FINISHER
  GENERAL
  HORIZONTAL_COMMUNICATION
  IMPLANTER
  JOY
  PERCEPTION_OF_LIFE
  RESOURCE_INVESTIGATOR
  SADNESS
  TEAM_WORKER
  TRANSACTIONAL_LEADERSHIP
  TRANSFORMATIONAL_LEADERSHIP
  UPWARD_COMMUNICATION
}

enum QuestionsEnum {
  BOOLEAN
  FREE_TEXT
  MULTISELECT
  NUMBER
  SELECT
}

input RRSSDto {
  mobile: String
  token: String!
}

input ResetPasswordDto {
  confirmPassword: String!
  hash: String!
  password: String!
}

type SatBasic {
  description: String!
  id: Float!
  sections: [SatBasicSection!]
  testsReports: [SatReport!]
  title: String!
}

type SatBasicAnswer {
  answerDimension: String
  id: Float!
  order: String!
  question: SatBasicQuestion!
  reportQuestions: SatReportQuestion!
  title: String!
  value: Float!
}

input SatBasicAnswerDto {
  dimension: AnswerDimensions
  order: Float!
  satBasicQuestionId: Float!
  title: String!
  value: Float!
}

input SatBasicDto {
  description: String!
  satBasicSections: [NestedSatBasicSectionDto!]!
  title: String!
}

type SatBasicQuestion {
  answers: [SatBasicAnswer!]!
  dimension: String
  id: Float!
  order: String!
  reportQuestions: SatReportQuestion
  section: SatBasicSection!
  title: String!
  type: String!
}

input SatBasicQuestionDto {
  dimension: QuestionDimentions
  order: Float!
  satBasicAnswers: [NestedSatBasicAnswerDto!]!
  satBasicSectionId: Float!
  title: String!
  type: QuestionsEnum!
}

type SatBasicSection {
  codename: String!
  id: Float!
  order: String!
  questions: [SatBasicQuestion!]!
  satTest: SatBasic!
  sectionResults: [SatSectionResult!]!
  title: String!
}

input SatBasicSectionDto {
  codename: SectionCodenames
  order: Float!
  questions: [NestedSatBasicQuestionDto!]!
  satBasicId: Float!
  title: String!
}

type SatReport {
  id: Float!
  result: SatResultDto
  satRealized: SatBasic!
  sectionsResults: [SatSectionResult!]!
  user: User!
}

input SatReportDto {
  satRealizedId: Float!
  sectionsResult: [SatSectionResultDto!]!
}

type SatReportQuestion {
  answersSelected: [SatBasicAnswer!]!
  id: Float!
  question: SatBasicQuestion!
  section: SatSectionResult!
}

input SatReportQuestionDto {
  answersSelected: [Float!]!
  question: Float!
}

type SatResultAreaDto {
  area: String!
  areaCodeName: String!
  puntuations: [SatResultPuntuationDto!]
}

type SatResultDto {
  areas: [SatResultAreaDto!]
}

type SatResultPuntuationDto {
  base: Float
  name: String!
  value: Float!
}

type SatSectionResult {
  id: Float!
  questions: [SatReportQuestion!]!
  satReport: SatReport!
  section: SatBasicSection!
}

input SatSectionResultDto {
  questions: [SatReportQuestionDto!]!
  section: Float!
}

enum SectionCodenames {
  EMOTIONAL_STATE
  GENERAL
  GETTING_INTO_ACTION
  HAPPINESS
  HEALT
  LEADERSHIP
  LIFE_PURPOSE
  SUBORDINATE
  TEAMWORK
}

input SignInDto {
  email: String!
  password: String!
}

type User {
  coach: Coach
  coachee: Coachee
  email: String!
  hashResetPassword: String!
  hashedRefreshToken: String!
  id: Float!
  isActive: Boolean!
  isStaff: Boolean!
  isSuperUser: Boolean!
  isVerified: Boolean!
  languages: String!
  name: String!
  organization: Organization
  password: String!
  testResults: [SatReport!]
  verificationCode: String!
}

input VerifyAccountDto {
  code: String!
  email: String!
}

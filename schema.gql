# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  refreshToken: String!
  token: String!
}

input ChangePasswordDto {
  confirmPassword: String!
  password: String!
}

type Coach {
  bio: String!
  coachAgenda: CoachAgenda!
  coachApplication: CoachApplication!
  coachAppointments: CoachAppointment!
  coachNotes: CoachNote!
  coacheeEvaluations: CoacheeEvaluation!
  coachingAreas: CoachingArea!
  coachingSessions: CoachingSession!
  id: Float!
  isActive: Boolean!
  phoneNumber: String!
  profilePicture: String!
  user: User!
  videoPresentation: String!
}

type CoachAgenda {
  availabilityRange: DateTime!
  coach: Coach!
  coachAgendaDays: [CoachAgendaDay!]!
  coachAppointments: [CoachAppointment!]!
  id: Float!
  outOfService: Boolean!
}

type CoachAgendaDay {
  availableHours: String!
  coachAgenda: CoachAgenda!
  day: DateTime!
  exclude: Boolean!
  id: Float!
}

type CoachApplication {
  approved: Boolean!
  coach: Coach!
  documents: Document!
  email: String!
  id: Float!
  name: String!
  phoneNumber: String!
}

type CoachAppointment {
  accomplished: Boolean!
  coach: Coach!
  coachAgenda: CoachAgenda!
  coachConfirmation: DateTime!
  coachee: Coachee!
  coacheeConfirmation: DateTime!
  coachingSession: CoachingSession!
  date: DateTime!
  id: Float!
  remarks: String!
  title: String!
}

input CoachDto {
  bio: String!
  coachApplicationId: Float
  coachingAreasId: [Float!]
  phoneNumber: String!
  profilePicture: String!
  userId: Float!
  videoPresentation: String!
}

type CoachNote {
  coach: Coach!
  coachee: Coachee!
  id: Float!
  note: String!
}

type Coachee {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean!
  coachAppointments: [CoachAppointment!]
  coachNotes: [CoachNote!]
  coacheeEvaluations: [CoacheeEvaluation!]
  coachingAreas: [CoachingArea!]
  coachingSessions: [CoachingSession!]
  id: Float!
  invitationAccepted: Boolean
  invited: Boolean!
  isActive: Boolean!
  isAdmin: Boolean!
  organization: Organization
  phoneNumber: String
  position: String!
  profilePicture: String
  user: User!
}

input CoacheeDto {
  aboutPosition: String!
  bio: String!
  canViewDashboard: Boolean!
  coachingAreasId: [Float!]!
  invitationAccepted: Boolean!
  invited: Boolean!
  isAdmin: Boolean!
  organizationId: Float!
  phoneNumber: String!
  position: String!
  profilePicture: String!
  userId: Float!
}

type CoacheeEvaluation {
  coach: Coach!
  coachee: Coachee!
  evaluation: String!
  id: Float!
}

type CoachingArea {
  coach: Coach!
  coachee: Coachee!
  coverPicture: String!
  description: String!
  id: Float!
  name: String!
}

type CoachingSession {
  appointmentRelated: CoachAppointment!
  area: String!
  coach: Coach!
  coachEvaluation: String!
  coachFeedback: String!
  coachee: Coachee!
  coacheeFeedback: String!
  id: Float!
  name: String!
  remarks: String!
}

input CreateOrganizationDto {
  about: String
  name: String
  ownerId: Float
  profilePicture: String
}

input CreateStaffUserDto {
  email: String!
  isStaff: Boolean!
  isSuperuser: Boolean!
  name: String!
  password: String!
}

input CreateUserDto {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Document {
  coachApplication: CoachApplication!
  file: String!
  id: Float!
  name: String!
  type: String!
}

input EditCoachDto {
  bio: String
  coachApplicationId: Float
  coachingAreasId: [Float!]
  isActive: Boolean
  phoneNumber: String
  profilePicture: String
  videoPresentation: String
}

input EditCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  invitationAccepted: Boolean
  invited: Boolean
  isAdmin: Boolean
  organizationId: Float
  phoneNumber: String
  position: String
  profilePicture: String
}

input EditOrganizationDto {
  about: String
  isActive: Boolean
  name: String
  profilePicture: String
}

input EditUserDto {
  email: String
  hashResetPassword: String
  hashedRefreshToken: String
  isActive: Boolean
  isVerified: Boolean
  name: String
  password: String
  verificationCode: String
}

input InviteCoacheeDto {
  aboutPosition: String
  bio: String
  canViewDashboard: Boolean
  coachingAreasId: [Float!]
  isAdmin: Boolean
  organizationId: Float!
  phoneNumber: String
  position: String
  profilePicture: String
  user: CreateUserDto!
}

type Mutation {
  acceptInvitation(id: Int!): Coachee!
  activateCoach(id: Int!): Coach!
  activateUser(id: Float!): User!
  changePassword(data: ChangePasswordDto!): Boolean!
  createCoach(data: CoachDto!): Coach!
  createCoachee(data: CoacheeDto!): Coachee!
  createOrganization(data: CreateOrganizationDto!): Organization!
  createSatBasic(data: SatBasicDto!): SatBasic!
  createStaffUser(data: CreateStaffUserDto!): User!
  createUser(data: CreateUserDto!): User!
  deactivateCoach(id: Int!): Coach!
  deactivateUser(id: Float!): User!
  deleteCoach(id: Int!): Float!
  deleteCoachee(id: Float!): Float!
  deleteCoachs(ids: [Int!]!): Float!
  deleteManyCoachees(ids: [Float!]!): Float!
  deleteManyOrganizations(ids: [Float!]!): Float!
  deleteManySatBasics(ids: [Float!]!): Float!
  deleteManyUsers(ids: [Float!]!): Float!
  deleteOrganization(id: Float!): Float!
  deleteSatBasic(id: Float!): Float!
  deleteUser(id: Float!): Float!
  editCoach(data: EditCoachDto!, id: Int!): Coach!
  editCoachs(data: EditCoachDto!, ids: [Int!]!): [Coach!]!
  inviteCoachee(data: InviteCoacheeDto!): Coachee!
  logout: Boolean!
  refreshToken: Auth!
  requestResetPassword(email: String!): Boolean!
  resetPassword(data: ResetPasswordDto!): User!
  signIn(data: SignInDto!): Auth!
  signInWithGoogle(data: RRSSDto!): Auth!
  signUp(data: CreateUserDto!): Auth!
  signUpWithGoogle(data: RRSSDto!): Auth!
  updateCoachee(data: EditCoacheeDto!, id: Float!): Coachee!
  updateManyCoachees(data: EditCoacheeDto!, ids: [Float!]!): [Coachee!]!
  updateManyOrganizations(data: EditOrganizationDto!, ids: [Float!]!): [Organization!]!
  updateManySatBasics(data: SatBasicDto!, ids: [Float!]!): [SatBasic!]!
  updateManyUsers(data: EditUserDto!, ids: [Float!]!): [User!]!
  updateOrganization(data: EditOrganizationDto!, id: Float!): Organization!
  updateSatBasic(data: SatBasicDto!, id: Float!): SatBasic!
  updateUser(data: EditUserDto!, id: Float!): User!
  verifyAccount(data: VerifyAccountDto!): Boolean!
}

type Organization {
  about: String!
  coachees: Coachee!
  id: Float!
  isActive: Boolean!
  name: String!
  owner: User!
  profilePicture: String!
}

type Query {
  findAllCoachees: [Coachee!]!
  findAllOrganizations: [Organization!]!
  findAllSatBasics: [SatBasic!]!
  findAllUsers: [User!]!
  findCoacheeById(id: Int!): Coachee!
  findOrganizationById(id: Int!): Organization!
  findSatBasicById(id: Int!): SatBasic!
  findUserById(id: Int!): User!
  getCoach(id: Int!): Coach!
  getCoachs(where: String): [Coach!]!
}

enum QuestionsEnum {
  BOOLEAN
  FREE_TEXT
  MULTISELECT
  NUMBER
  SELECT
}

input RRSSDto {
  mobile: String
  token: String!
}

input ResetPasswordDto {
  confirmPassword: String!
  email: String!
  hash: String!
  password: String!
}

type SatBasic {
  description: String!
  id: Float!
  sections: [SatBasicSection!]
  testsReports: [SatReport!]
  title: String!
}

type SatBasicAnswer {
  id: Float!
  question: SatBasicQuestion!
  reportQuestions: SatReportQuestion!
  title: String!
  value: Float!
}

input SatBasicAnswerDto {
  title: String!
  value: Float!
}

input SatBasicDto {
  description: String!
  satBasicSections: [SatBasicSectionDto!]!
  title: String!
}

type SatBasicQuestion {
  answers: [SatBasicAnswer!]!
  id: Float!
  section: SatBasicSection!
  title: String!
  type: String!
}

input SatBasicQuestionDto {
  satBasicAnswers: [SatBasicAnswerDto!]!
  title: String!
  type: QuestionsEnum!
}

type SatBasicSection {
  id: Float!
  questions: [SatBasicQuestion!]!
  satTest: SatBasic!
  sectionResults: [SatSectionResult!]!
  title: String!
}

input SatBasicSectionDto {
  questions: [SatBasicQuestionDto!]!
  title: String!
}

type SatReport {
  id: Float!
  satRealized: SatBasic!
  sectionsResults: [SatSectionResult!]!
  user: User!
}

type SatReportQuestion {
  answersSelected: [SatBasicAnswer!]!
  id: Float!
  section: SatSectionResult!
}

type SatSectionResult {
  id: Float!
  questions: [SatReportQuestion!]!
  satReport: SatReport!
  section: SatBasicSection!
}

input SignInDto {
  email: String!
  password: String!
}

type User {
  coach: Coach
  coachee: Coachee
  email: String!
  hashResetPassword: String!
  hashedRefreshToken: String!
  id: Float!
  isActive: Boolean!
  isStaff: Boolean!
  isSuperUser: Boolean!
  isVerified: Boolean!
  languages: String!
  name: String!
  organization: Organization
  password: String!
  testResults: [SatReport!]
  verificationCode: String!
}

input VerifyAccountDto {
  code: String!
  email: String!
}
